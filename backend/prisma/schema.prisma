// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String        @id @default(uuid())
  username      String        @unique
  email         String        @unique
  passwordHash  String
  role          Role          @default(USER)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  companies     Company[]
  memberships   CompanyUser[]
  quotesCreated Quote[]
}

model Company {
  id          String        @id @default(uuid())
  owner       User          @relation(fields: [ownerId], references: [id])
  ownerId     String
  name        String        @unique
  slug        String        @unique
  description String
  location    String
  phone       String
  clients     Client[]
  members     CompanyUser[]
  quotes      Quote[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  deletedAt   DateTime?

  @@index([ownerId])
}

model Client {
  id        String   @id @default(uuid())
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  name      String
  legalName String
  taxId     String
  email     String
  phone     String
  quotes    Quote[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([companyId, name])
  @@unique([companyId, email])
  @@unique([companyId, taxId])
  @@index([companyId])
}

model CompanyUser {
  id        String   @id @default(uuid())
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([companyId, userId])
  @@index([userId])
  @@index([companyId])
}

model Quote {
  id          String  @id @default(uuid())
  company     Company @relation(fields: [companyId], references: [id])
  companyId   String
  client      Client  @relation(fields: [clientId], references: [id])
  clientId    String
  createdBy   User    @relation(fields: [createdById], references: [id])
  createdById String

  quoteNumber String    @unique
  status      String
  issueDate   DateTime
  validUntil  DateTime?
  sentAt      DateTime?
  acceptedAt  DateTime?
  rejectedAt  DateTime?

  currency       String
  subtotal       Decimal
  discountAmount Decimal?
  taxAmount      Decimal?
  total          Decimal

  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  items QuoteItem[]

  @@index([companyId])
  @@index([clientId])
  @@index([createdById])
}

model QuoteItem {
  id          String   @id @default(uuid())
  quote       Quote    @relation(fields: [quoteId], references: [id])
  quoteId     String
  position    Int
  title       String
  description String?
  quantity    Decimal
  unit        String
  unitPrice   Decimal
  discountPct Decimal?
  taxRate     Decimal?
  lineTotal   Decimal

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([quoteId])
}
